- name: "Evaluate Configuration"
  set_fact:
    install_1password: "{{ global_workstation_settings | is_app_present(workstation_settings, '1password') }}"
    install_jetbrains_toolbox: >-
      {{ global_workstation_settings | resolve_setting(workstation_settings, 'install_jetbrains_toolbox', false) }}
    install_docker: >-
      {{ global_workstation_settings | resolve_setting(workstation_settings, 'install_docker', false) }}

- name: "Remove dnf Repositories"
  become: yes
  file:
    path: '{{ item }}'
    state: absent
  loop: "{{ global_workstation_settings | merge_lists(workstation_settings, 'repos.absent') }}"

- name: "Configure dnf defaultyes"
  become: yes
  ansible.builtin.lineinfile:
    path: '{{ dnf_config }}'
    regexp: 'defaultyes='
    line: defaultyes=True

- name: "Configure dnf max_parallel_downloads"
  become: yes
  ansible.builtin.lineinfile:
    path: '{{ dnf_config }}'
    regexp: 'max_parallel_downloads='
    line: max_parallel_downloads=20

- name: "Configure deltarpm"
  become: yes
  ansible.builtin.lineinfile:
    path: '{{ dnf_config }}'
    regexp: 'deltarpm='
    line: deltarpm=False

- name: "Configure Native apps"
  become: true
  dnf:
    state: "{{ item.state }}"
    name: "{{ item.name }}"
  loop: "{{ global_workstation_settings | merge_apps_by_name(workstation_settings) }}"

- name: "Add 1password repo using yum_repository"
  become: true
  when: install_1password
  ansible.builtin.yum_repository:
    name: 1password
    description: 1Password Stable Channel
    baseurl: https://downloads.1password.com/linux/rpm/stable/$basearch
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: https://downloads.1password.com/linux/keys/1password.asc
    state: present

- name: "Add 1password key"
  become: yes
  when: install_1password
  ansible.builtin.rpm_key:
    state: present
    key: https://downloads.1password.com/linux/keys/1password.asc

- name: "Install 1password"
  become: yes
  when: install_1password
  dnf:
    state: present
    name:
      - 1password

- name: "Install: JetBrains Toolbox"
  when: install_jetbrains_toolbox
  args:
    executable: /bin/bash
  shell: |-
    # Source: https://gist.github.com/abn/022c5f9eae491687a766f25bd8322fc0
    # Reference: https://github.com/nagygergo/jetbrains-toolbox-install/blob/master/jetbrains-toolbox.sh

    APP_IMAGE_PATH="$HOME/bin/jetbrains-toolbox"
    if [ -e "$APP_IMAGE_PATH" ]; then
      echo "Jetbrains Toolbox already present at path: $APP_IMAGE_PATH"
      echo "Skipping task"
      exit 0
    fi

    # Note that we grep for linux here, if you are using this on mac/windows please see json output
    TOOLBOX_URL=$(curl --silent 'https://data.services.jetbrains.com//products/releases?code=TBA&latest=true&type=release' \
        -H 'Origin: https://www.jetbrains.com' \
        -H 'Accept-Encoding: gzip, deflate, br' \
        -H 'Accept-Language: en-US,en;q=0.8' \
        -H 'Accept: application/json, text/javascript, */*; q=0.01' \
        -H 'Referer: https://www.jetbrains.com/toolbox/download/' \
        -H 'Connection: keep-alive' \
        -H 'DNT: 1' \
        --compressed \
      | grep -Po '"linux":.*?[^\\]",' \
      | awk -F ':' '{print $3,":"$4}'| sed 's/[", ]//g')

    install -d ${HOME}/bin
    curl -sL ${TOOLBOX_URL} | tar xvz --directory=${HOME}/bin --strip-components=1

    $HOME/bin/jetbrains-toolbox

- name: "Remove Distribution Docker Packages"
  become: yes
  when: install_docker
  dnf:
    state: absent
    name:
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine-selinux
      - docker-engine

- name: "Configure Docker DNF Repository"
  become: true
  when: install_docker
  # dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
  ansible.builtin.yum_repository:
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/fedora/gpg
    state: "{{ 'present' if install_docker else 'absent' }}"

- name: "Install Official Docker Packages"
  become: yes
  when: install_docker
  dnf:
    state: present
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

- name: "Start Docker"
  become: yes
  when: install_docker
  ansible.builtin.systemd:
    state: started
    name: docker

- name: "Fix 'docker.sock' File Permissions"
  become: yes
  when: install_docker
  ansible.builtin.file:
    path: /var/run/docker.sock
    mode: '666'

- name: "Run 'docker ps -a'"
  become: true
  when: install_docker
  shell: |-
    docker ps -a
